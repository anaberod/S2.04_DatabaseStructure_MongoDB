// 1. All restaurants
{}

// 2. All restaurants — use Project: { "restaurant_id": 1, "name": 1, "borough": 1, "cuisine": 1 }
{}

// 3. Exclude _id — use Project: { "_id": 0, "restaurant_id": 1, "name": 1, "borough": 1, "cuisine": 1 }
{}

// 4. Show zip code — use Project: { "_id": 0, "restaurant_id": 1, "name": 1, "borough": 1, "address.zipcode": 1 }
{}

// 5. Restaurants in Bronx
{ "borough": "Bronx" }

// 6. First 5 in Bronx — use Limit: 5
{ "borough": "Bronx" }

// 7. Skip 5 and Limit 5
{ "borough": "Bronx" }

// 8. Score greater than 90
{ "grades.score": { "$gt": 90 } }

// 9. Score >80 and <100
{ "grades.score": { "$gt": 80, "$lt": 100 } }

// 10. Latitude < -95.754168
{ "address.coord.1": { "$lt": -95.754168 } }

// 11. Not American cuisine, score >70, longitude < -65.754168
{
  "cuisine": { "$ne": "American " },
  "grades.score": { "$gt": 70 },
  "address.coord.0": { "$lt": -65.754168 }
}

// 12. Same as 11, no $and
{
  "cuisine": { "$ne": "American " },
  "grades.score": { "$gt": 70 },
  "address.coord.0": { "$lt": -65.754168 }
}

// 13. Not American, grade A, not in Brooklyn — sort in Compass by cuisine descending
{
  "cuisine": { "$ne": "American " },
  "grades.grade": "A",
  "borough": { "$ne": "Brooklyn" }
}

// 14. Name starts with 'Wil'
{ "name": { "$regex": "^Wil" } }

// 15. Name ends with 'ces'
{ "name": { "$regex": "ces$" } }

// 16. Name contains 'Reg'
{ "name": { "$regex": "Reg" } }

// 17. Bronx and cuisine is American or Chinese
{
  "borough": "Bronx",
  "cuisine": { "$in": ["American ", "Chinese"] }
}

// 18. In Staten Island, Queens, Bronx, or Brooklyn
{
  "borough": { "$in": ["Staten Island", "Queens", "Bronx", "Brooklyn"] }
}

// 19. Not in Staten Island, Queens, Bronx, or Brooklyn
{
  "borough": { "$nin": ["Staten Island", "Queens", "Bronx", "Brooklyn"] }
}

// 20. Score not greater than 10
{
  "grades.score": { "$not": { "$gt": 10 } }
}

// 21. Fish (excluding American and Chinese) or name starts with Wil
{
  "$or": [
    {
      "cuisine": { "$nin": ["American ", "Chinese"] },
      "cuisine": { "$regex": "Fish" }
    },
    { "name": { "$regex": "^Wil" } }
  ]
}

// 22. Grade A and score 11 on 2014-08-11
{
  "grades": {
    "$elemMatch": {
      "grade": "A",
      "score": 11,
      "date": { "$eq": { "$date": "2014-08-11T00:00:00Z" } }
    }
  }
}

// 23. Second grade is A, score 9, on 2014-08-11
{
  "grades.1.grade": "A",
  "grades.1.score": 9,
  "grades.1.date": { "$eq": { "$date": "2014-08-11T00:00:00Z" } }
}

// 24. Second coord > 42 and <= 52
{
  "address.coord.1": { "$gt": 42, "$lte": 52 }
}

// 25. Sort by name ascending (use Compass "Sort" tab)
{}

// 26. Sort by name descending (use Compass "Sort" tab: { "name": -1 })
{}

// 27. Sort by cuisine ascending and borough descending
// Use Compass "Sort" tab: { "cuisine": 1, "borough": -1 }
{}

// 28. Addresses without street
{ "address.street": { "$exists": false } }

// 29. Coord is of type double
{ "address.coord": { "$type": "double" } }

// 30. Score divisible by 7
{ "grades.score": { "$mod": [7, 0] } }

// 31. Name contains 'mon'
{ "name": { "$regex": "mon", "$options": "i" } }

// 32. Name starts with 'Mad'
{ "name": { "$regex": "^Mad" } }